{"version":3,"sources":["components/PlacesAutocomplete.jsx","components/DistanceMatrixWrapper.jsx","components/ParkingPeriod.jsx","components/ParkingTimeOffset.jsx","components/ParkingListItem.jsx","components/ParkingList.jsx","components/ParkingDetail.jsx","lib/CarparkAvailability.jsx","lib/NearestFirebase.jsx","components/AppMain.jsx","components/TermsOfUse.jsx","App.js","reportWebVitals.js","index.js"],"names":["PlacesAutocomplete","props","_usePlacesAutocomplet","usePlacesAutocomplete","requestOptions","componentRestrictions","country","debounce","ready","value","_usePlacesAutocomplet2","suggestions","status","data","setValue","clearSuggestions","ref","useOnclickOutside","handleSelect","suggestion","fullAddress","description","placeName","structured_formatting","main_text","address","secondary_text","getGeocode","then","results","getLatLng","_ref","lat","lng","onSelectDestination","destinationAddr","destinationLat","destinationLng","catch","error","console","log","react_default","a","createElement","InputGroup","className","Form","Control","type","placeholder","aria-label","aria-describedby","onChange","e","target","disabled","map","place_id","_suggestion$structure","key","onClick","DistanceMatrixWrapper","_this","this","inputs","calculateDistance","position","destAdr","offsetOverride","origLat","coords","latitude","origLng","longitude","destLat","destLng","esm","options","destinations","origins","travelMode","callback","res","distance","rows","elements","onChangeDMDistance","duration","offset","Math","ceil","onChangeDMOffset","Component","ParkingPeriod","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickPeriod","btnIndex","parkingPeriod","i","buttons","length","onChangeParkingPeriod","_this2","Button","ParkingTimeOffset","refreshOffsets","dateTimeNow","Date","now","offsets","forEach","offsetDateTime","timeDescription","getHours","toString","padStart","getMinutes","style","width","onChangeOffset","ParkingListItem","onClickDestination","googleMapUrl","carparkData","window","open","renderParkingFee","estimate","parkingForbidden","parkingFee","toFixed","renderAvailability","availability","undefined","lots_available","carpark","carparkAvailability","fee_structure","variant","show","detailIndex","name","walkingMinutes","ParkingList","shortlists","components_ParkingListItem","ParkingDetail","carparkDetail","Offcanvas","showDetail","onHide","height","placement","Header","Title","Body","rate_workday_peak","rate_workday_offpeak","rate_sat","rate_sun_ph","CarparkAvailability","fetchAvailabilityData","fetch","method","headers","content-type","response","json","items","carpark_data","refreshDateTime","timestamp","dataLoad","dataError","populateAvailability","shortlist","carparkNo","car_park_no","availabilityCarparkNo","carpark_number","carpark_info","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","functions","getFunctions","getNearestCarparks","httpsCallable","AppMain","state","originLat","originLng","destinationSearchRadius","timeToDestination","componentDidMount","showLoading","navigator","geolocation","getCurrentPosition","onPositionSuccess","onPositionError","enableHighAccuracy","timeout","maximumAge","setState","refreshCarparkShortlist","oLat","oLng","dLat","dLng","timeToDest","parkPeriod","destRadius","result","isLoading","display","document","getElementById","destinationData","event","onShowDetail","onCloseShowDetail","id","components_PlacesAutocomplete","components_DistanceMatrixWrapper","components_ParkingTimeOffset","components_ParkingPeriod","components_ParkingList","components_ParkingDetail","React","TermsOfUse","App","showMenu","onToggleShowMenu","react_router_dom","to","react_router","path","element","components_AppMain","components_TermsOfUse","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"sTAsFeA,EAjFY,SAACC,GAAU,IAAAC,EAOhCC,YAAsB,CACxBC,eAAgB,CAEdC,sBAAuB,CAAEC,QAAS,OAEpCC,SAAU,MAVVC,EAFkCN,EAElCM,MACAC,EAHkCP,EAGlCO,MAHkCC,EAAAR,EAIlCS,YAAeC,EAJmBF,EAInBE,OAAQC,EAJWH,EAIXG,KACvBC,EALkCZ,EAKlCY,SACAC,EANkCb,EAMlCa,iBASIC,EAAMC,YAAkB,WAG5BF,MAQIG,EAAe,SAACC,GAAD,OACnB,WAGE,IAAMC,EAAcD,EAAWE,YACzBC,EAAYH,EAAWI,sBAAsBC,UAC7CC,EAAUN,EAAWI,sBAAsBG,eACjDZ,EAASQ,EAAY,KAAOG,GAAS,GACrCV,IAGAY,YAAW,CAAEF,QAASL,IACnBQ,KAAK,SAACC,GAAD,OAAaC,YAAUD,EAAQ,MACpCD,KAAK,SAAAG,GAAkB,IAAfC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,IAEZhC,EAAMiC,oBAAoB,CAAEC,gBAAiBV,EAASW,eAAgBJ,EAAKK,eAAgBJ,MAE5FK,MAAM,SAACC,GACNC,QAAQC,IAAI,UAAWF,OAkB/B,OACEG,EAAAC,EAAAC,cAAA,OAAK5B,IAAKA,GACR0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,UAAU,QACpBJ,EAAAC,EAAAC,cAACG,EAAA,EAAKC,QAAN,CACEC,KAAK,SACLH,UAAU,OACVI,YAAY,cACZC,aAAW,cACXC,mBAAiB,eACjBC,SAlDY,SAACC,GAEnBxC,EAASwC,EAAEC,OAAO9C,QAiDZ+C,UAAWhD,EACXC,MAAOA,KAGC,OAAXG,GAAmB8B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAWJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,8BA3B9DjC,EAAK4C,IAAI,SAACtC,GAAe,IAErBuC,EAEEvC,EAFFuC,SAFqBC,EAInBxC,EADFI,sBAAyBC,EAHJmC,EAGInC,UAAWE,EAHfiC,EAGejC,eAGtC,OACEgB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAgBc,IAAKF,EAAUG,QAAS3C,EAAaC,IACjEuB,EAAAC,EAAAC,cAAA,cAASpB,GADX,IAC+BkB,EAAAC,EAAAC,cAAA,aAAQlB,kBCdhCoC,mLA5CJ,IAAAC,EAAAC,KACP,IAA4C,IAAxCA,KAAK/D,MAAMgE,OAAOC,kBAAtB,CAMA,IACMC,EAAWH,KAAK/D,MAAMgE,OAAOE,SAC7BC,EAAUJ,KAAK/D,MAAMgE,OAAO9B,gBAC5BkC,EAAiBL,KAAK/D,MAAMgE,OAAOI,eACnCH,EAAoBF,KAAK/D,MAAMgE,OAAOC,kBACtCI,EAA0C,OAA/BN,KAAK/D,MAAMgE,OAAOE,SAAqBH,KAAK/D,MAAMgE,OAAOE,SAASI,OAAOC,SAAW,UAC/FC,EAA0C,OAA/BT,KAAK/D,MAAMgE,OAAOE,SAAqBH,KAAK/D,MAAMgE,OAAOE,SAASI,OAAOG,UAAY,YAChGC,EAAUX,KAAK/D,MAAMgE,OAAO7B,eAC5BwC,EAAUZ,KAAK/D,MAAMgE,OAAO5B,eAClC,OACEK,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACEC,QAAS,CACPC,aAAc,CAAC,CAAE/C,IAAKsC,EAASrC,IAAKwC,IACpCO,QAAS,CAAC,CAAEhD,IAAK2C,EAAS1C,IAAK2C,IAC/BK,WAda,WAgBfC,SAAU,SAACC,GACT,GAAiB,OAAbhB,EAAmB,CACrB,IAAIiB,EAAWD,EAAIE,KAAK,GAAGC,SAAS,GAEpC,GADAvB,EAAK9D,MAAMsF,mBAAmBH,GACd,KAAZhB,IAAqC,IAAnBC,EAA0B,CAC9C,IAAImB,EAAWJ,EAASI,SAAS/E,MAAQ,GACrCgF,EAAmC,EAA1BC,KAAKC,KAAKH,EAAW,GAClCzB,EAAK9D,MAAM2F,iBAAiBH,SAG9B,GAAIvB,EAAmB,CAErBH,EAAK9D,MAAM2F,iBADI,eAnCOC,qBCuCrBC,cArCb,SAAAA,IAAc,IAAA/B,EAAA,OAAAgC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA8B,IACZ/B,EAAAgC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAnC,QAUFoC,cAAgB,SAACC,EAAUC,GACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIxC,EAAKyC,QAAQC,SAAUF,EAEvCxC,EAAKyC,QAAQD,GADXA,IAAMF,EACU,cAEA,gBAGtBtC,EAAK9D,MAAMyG,sBAAsBJ,IAjBjCvC,EAAKyC,QAAU,CACb,cACA,gBACA,gBACA,gBACA,iBAPUzC,wEAsBL,IAAA4C,EAAA3C,KACP,GAAkC,KAA/BA,KAAK/D,MAAMkC,gBACd,OACEO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACbJ,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAQ9D,UAAW,0BAAnB,OACAJ,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAQ9D,UAAW,YAAckB,KAAKwC,QAAQ,GAAI3C,QAAS,kBAAM8C,EAAKP,cAAc,EAAG,MAAvF,SACA1D,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAQ9D,UAAW,YAAckB,KAAKwC,QAAQ,GAAI3C,QAAS,kBAAM8C,EAAKP,cAAc,EAAG,KAAvF,OACA1D,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAQ9D,UAAW,YAAckB,KAAKwC,QAAQ,GAAI3C,QAAS,kBAAM8C,EAAKP,cAAc,EAAG,KAAvF,OACA1D,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAQ9D,UAAW,YAAckB,KAAKwC,QAAQ,GAAI3C,QAAS,kBAAM8C,EAAKP,cAAc,EAAG,KAAvF,OACA1D,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAQ9D,UAAW,YAAckB,KAAKwC,QAAQ,GAAI3C,QAAS,kBAAM8C,EAAKP,cAAc,EAAG,KAAvF,eAjCoBP,aC0CbgB,cAzCb,SAAAA,IAAc,IAAA9C,EAAA,OAAAgC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA6C,IACZ9C,EAAAgC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAc,GAAAV,KAAAnC,QAeF8C,eAAiB,WACf,IAAMC,EAAcC,KAAKC,MACzBlD,EAAKmD,QAAQC,QAAQ,SAAA1B,GACnB,IAAM2B,EAAiB,IAAIJ,KAAKD,EAA6B,GAAftB,EAAOhF,MAAa,KAG5D4G,EAFcD,EAAeE,WAAWC,WAAWC,SAAS,EAAG,KAE/B,IADhBJ,EAAeK,aAAaF,WAAWC,SAAS,EAAG,KAEzE/B,EAAO4B,gBAAkBA,KArB3BtD,EAAKmD,QAAU,CACb,CAAEzG,MAAO,EAAGY,YAAa,0BACzB,CAAEZ,MAAO,EAAGY,YAAa,+BACzB,CAAEZ,MAAO,GAAIY,YAAa,gCAC1B,CAAEZ,MAAO,GAAIY,YAAa,gCAC1B,CAAEZ,MAAO,GAAIY,YAAa,gCAC1B,CAAEZ,MAAO,GAAIY,YAAa,gCAC1B,CAAEZ,MAAO,GAAIY,YAAa,gCAC1B,CAAEZ,MAAO,GAAIY,YAAa,gCAC1B,CAAEZ,MAAO,GAAIY,YAAa,gCAC1B,CAAEZ,MAAO,GAAIY,YAAa,iCAZhB0C,wEA4BZ,GAAkC,KAA/BC,KAAK/D,MAAMkC,gBAEd,OADA6B,KAAK8C,iBAEHpE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,8BAA8B4E,MAAO,CAAEC,MAAO,SAAWlH,MAAOuD,KAAK/D,MAAMwF,OAAQpC,SAAUW,KAAK/D,MAAM2H,gBACvH5D,KAAKkD,QAAQzD,IAAI,SAAAgC,GAAM,OACtB/C,EAAAC,EAAAC,cAAA,UAAQgB,IAAK6B,EAAOhF,MAAOA,MAAOgF,EAAOhF,OAAQgF,EAAOpE,YAAaoE,EAAO4B,4BApCxDxB,aC2DjBgC,6MAzDbC,mBAAqB,WACnB,IAAMC,EAAehE,EAAK9D,MAAM+H,YAAYD,aAC5CE,OAAOC,KAAKH,EAAc,aAG5BI,iBAAmB,SAACC,GAClB,OAAkC,IAA9BA,EAASC,iBACJ3F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,UAEqB,IAAxBsF,EAASE,WACJ5F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAf,QAEAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAf,KAAqCsF,EAASE,WAAWC,QAAQ,OAK9EC,mBAAqB,SAACC,GACpB,QAAqBC,IAAjBD,EAAJ,CACA,IAAME,EAAiBF,EAAa,GAAGE,eACvC,MAAuB,MAAnBA,EACKjG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAoB6F,EAAnC,SAEAjG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmB6F,EAAlC,mFAIF,IAAAhC,EAAA3C,KACP,GAA+B,OAA3BA,KAAK/D,MAAM+H,YAAf,CACA,IAAMS,EAAezE,KAAK/D,MAAM+H,YAAYY,QAAQC,oBAC9CT,EAAW,CACfE,WAAYtE,KAAK/D,MAAM+H,YAAYc,cAAcR,WACjDD,iBAAkBrE,KAAK/D,MAAM+H,YAAYc,cAAcT,kBAEzD,OACE3F,EAAAC,EAAAC,cAAA,MACEmG,QAAQ,QACRjG,UAAU,wEAEVJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BAA6Be,QAAS,kBAAM8C,EAAK1G,MAAM+I,KAAKrC,EAAK1G,MAAMgJ,eACpFvG,EAAAC,EAAAC,cAAA,KAAGE,UAAU,6BAEfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAAsBe,QAASG,KAAK8D,oBACjDpF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWkB,KAAK/D,MAAM+H,YAAYY,QAAQM,MACzDxG,EAAAC,EAAAC,cAAA,WAAMoB,KAAK/D,MAAM+H,YAAYmB,eAA7B,aACAzG,EAAAC,EAAAC,cAAA,WAAMoB,KAAK/D,MAAM+H,YAAYY,QAAQnH,UAEvCiB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACZkB,KAAKmE,iBAAiBC,GACtBpE,KAAKwE,mBAAmBC,aAnDL5C,aCkBfuD,mLAfX,KAAIpF,KAAK/D,MAAMoJ,WAAW5C,OAAS,GACnC,OACE/D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,oCACZJ,EAAAC,EAAAC,cAAC0G,EAAD,CAAiBN,KAAMhF,KAAK/D,MAAM+I,KAAMC,YAAa,EAAGjB,YAAchE,KAAK/D,MAAMoJ,WAAW5C,OAAS,EAAKzC,KAAK/D,MAAMoJ,WAAW,GAAK,OACrI3G,EAAAC,EAAAC,cAAC0G,EAAD,CAAiBN,KAAMhF,KAAK/D,MAAM+I,KAAMC,YAAa,EAAGjB,YAAchE,KAAK/D,MAAMoJ,WAAW5C,OAAS,EAAKzC,KAAK/D,MAAMoJ,WAAW,GAAK,OACrI3G,EAAAC,EAAAC,cAAC0G,EAAD,CAAiBN,KAAMhF,KAAK/D,MAAM+I,KAAMC,YAAa,EAAGjB,YAAchE,KAAK/D,MAAMoJ,WAAW5C,OAAS,EAAKzC,KAAK/D,MAAMoJ,WAAW,GAAK,OACrI3G,EAAAC,EAAAC,cAAC0G,EAAD,CAAiBN,KAAMhF,KAAK/D,MAAM+I,KAAMC,YAAa,EAAGjB,YAAchE,KAAK/D,MAAMoJ,WAAW5C,OAAS,EAAKzC,KAAK/D,MAAMoJ,WAAW,GAAK,OACrI3G,EAAAC,EAAAC,cAAC0G,EAAD,CAAiBN,KAAMhF,KAAK/D,MAAM+I,KAAMC,YAAa,EAAGjB,YAAchE,KAAK/D,MAAMoJ,WAAW5C,OAAS,EAAKzC,KAAK/D,MAAMoJ,WAAW,GAAK,gBAVrHxD,aCuBX0D,mLArBX,GAAiC,OAA7BvF,KAAK/D,MAAMuJ,cACf,OACE9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAWT,KAAMhF,KAAK/D,MAAMyJ,WAAYC,OAAQ3F,KAAK/D,MAAM0J,OAAQjC,MAAO,CAAEkC,OAAQ,OAASC,UAAW,UACtGnH,EAAAC,EAAAC,cAAC6G,EAAA,EAAUK,OAAX,KACEpH,EAAAC,EAAAC,cAAC6G,EAAA,EAAUM,MAAX,KAAiBrH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBAA9B,IAAuDkB,KAAK/D,MAAMuJ,cAAcN,OAElFxG,EAAAC,EAAAC,cAAC6G,EAAA,EAAUO,KAAX,KACEtH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,gBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQkB,KAAK/D,MAAMuJ,cAAcS,mBAChDvH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,oBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQkB,KAAK/D,MAAMuJ,cAAcU,sBAChDxH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,YACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQkB,KAAK/D,MAAMuJ,cAAcW,UAChDzH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,6BACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQkB,KAAK/D,MAAMuJ,cAAcY,sBAhB9BvE,aCHfwE,EACX,SAAAA,EAAYnF,GAAU,IAAAnB,EAAAC,KAAA+B,OAAAC,EAAA,EAAAD,CAAA/B,KAAAqG,GAAArG,KAUtBsG,sBAAwB,WAKtBC,MAJY,2CAID,CAAEC,OAHE,MAGcC,QAFb,CAAEC,eAAgB,sBAG/B9I,KAAK,SAAA+I,GAAc,OAAOA,EAASC,SACnChJ,KAAK,SAACf,GACLkD,EAAKlD,KAAOA,EAAKgK,MAAM,GAAGC,aAC1B/G,EAAKgH,gBAAkBlK,EAAKgK,MAAM,GAAGG,UACrCjH,EAAKkH,UAAW,EAChBlH,EAAKmB,aACJ5C,MAAM,SAACC,GACRwB,EAAKmH,UAAY3I,EACjBwB,EAAKkH,UAAW,EAChBlH,EAAKmB,cAzBWlB,KA6BtBmH,qBAAuB,SAAC9B,QACJX,IAAd3E,EAAKlD,MAAoC,OAAdkD,EAAKlD,MACpCwI,EAAWlC,QAAQ,SAAAiE,GACjB,IAAMC,EAAYD,EAAUxC,QAAQ0C,YACpCvH,EAAKlD,KAAKsG,QAAQ,SAAAsB,GAChB,IAAM8C,EAAwB9C,EAAa+C,eACvCH,IAAcE,IAChBH,EAAUxC,QAAQC,oBAAsBJ,EAAagD,mBAnC3DzH,KAAKnD,KAAO,KACZmD,KAAK+G,gBAAkB,KACvB/G,KAAKkH,UAAY,KACjBlH,KAAKiH,UAAW,EAChBjH,KAAKkB,SAAWA,EAEhBlB,KAAKsG,yCCKHoB,EAAMC,YAVW,CACrBC,OAAQ,GACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIXC,EAAYC,YAAaV,GAGhBW,EAFYC,YAAcH,EAAW,sBCuIrCI,6MA1IbC,MAAQ,CACNrI,SAAU,KACViB,SAAU,KACVsE,YAAY,EACZrF,gBAAgB,EAChBH,mBAAmB,EACnBuI,UAAW,EACXC,UAAW,EACXvK,gBAAiB,GACjBC,eAAgB,EAChBC,eAAgB,EAChBsK,wBAAyB,EACzBC,kBAAmB,EACnBtG,cAAe,GACfkD,cAAe,KACfH,WAAY,MAGdwD,kBAAoB,WAClB9I,EAAK8E,oBAAsB,IAAIwB,EAAoB,WAAQtG,EAAK+I,aAAY,KAC5EC,UAAUC,YAAYC,mBACpBlJ,EAAKmJ,kBACLnJ,EAAKoJ,gBACL,CACEC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,SAKlBJ,kBAAoB,SAAC/I,GACnB,IAAMsI,EAAYtI,EAASI,OAAOC,SAC5BkI,EAAYvI,EAASI,OAAOG,UAClCX,EAAKwJ,SAAS,CAAEpJ,WAAUsI,YAAWC,iBAGvCS,gBAAkB,SAAC5K,OAInBiL,wBAA0B,WACxB,GAAmC,KAA/BzJ,EAAKyI,MAAMrK,gBAAf,CACA4B,EAAK+I,aAAY,GACjB,IAAMW,EAAiC,IAAzB1J,EAAKyI,MAAMC,UAAmB1I,EAAKyI,MAAMpK,eAAiB2B,EAAKyI,MAAMC,UAC7EiB,EAAiC,IAAzB3J,EAAKyI,MAAME,UAAmB3I,EAAKyI,MAAMnK,eAAiB0B,EAAKyI,MAAME,UACnFL,EAAmB,CACjBoB,KAAMA,EACNC,KAAMA,EACNC,KAAM5J,EAAKyI,MAAMpK,eACjBwL,KAAM7J,EAAKyI,MAAMnK,eACjBwL,WAAY9J,EAAKyI,MAAMI,kBACvBkB,WAAY/J,EAAKyI,MAAMlG,cACvByH,WAAYhK,EAAKyI,MAAMG,0BACtB/K,KAAK,SAACoM,GACP,IAAM3E,EAAa2E,EAAOnN,KAC1B2B,QAAQC,IAAIuL,GACZjK,EAAK8E,oBAAoBsC,qBAAqB9B,GAC9CtF,EAAKwJ,SAAS,CAAElE,WAAYA,GAAc,WAExCtF,EAAK+I,aAAY,WAKvBA,YAAc,SAACmB,GACb,IAAMC,EAAWD,EAAa,OAAS,OACvCE,SAASC,eAAe,WAAW1G,MAAMwG,QAAUA,KAGrDhM,oBAAsB,SAACmM,GACrBtK,EAAKwJ,SAAS,CAAElJ,gBAAgB,EAAOH,mBAAmB,IAC1DH,EAAKwJ,SAASc,EAAiBtK,EAAKyJ,4BAGtC9G,sBAAwB,SAACJ,GACvBvC,EAAKwJ,SAAS,CAAEjH,cAAeA,GAAiBvC,EAAKyJ,4BAGvD5F,eAAiB,SAAC0G,GAChBvK,EAAKwJ,SAAS,CAAElJ,gBAAgB,EAAMuI,kBAAmB0B,EAAM/K,OAAO9C,OAASsD,EAAKyJ,4BAGtFjI,mBAAqB,SAACH,GACpBrB,EAAKwJ,SAAS,CAAEnI,SAAUA,OAG5BQ,iBAAmB,SAACH,IACgB,IAA9B1B,EAAKyI,MAAMnI,gBACfN,EAAKwJ,SAAS,CAAEX,kBAAmBnH,EAAQvB,mBAAmB,OAGhEqK,aAAe,SAACtF,GACd,IAAMO,EAAgBzF,EAAKyI,MAAMnD,WAAWJ,GAAaL,QACzD7E,EAAKwJ,SAAS,CAAE/D,cAAeA,EAAeE,YAAY,OAG5D8E,kBAAoB,WAClBzK,EAAKwJ,SAAS,CAAE7D,YAAY,6EAI5B,OACEhH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAK6L,GAAG,UAAU/G,MAAO,CAAEwG,QAAS,SAClCxL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0DACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAGnBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6CACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAC8L,EAAD,CACEzK,OAAQD,KAAKwI,MACbtK,oBAAqB8B,KAAK9B,sBAC5BQ,EAAAC,EAAAC,cAAC+L,EAAD,CACE1K,OAAQD,KAAKwI,MACbjH,mBAAoBvB,KAAKuB,mBACzBK,iBAAkB5B,KAAK4B,qBAG7BlD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAACgM,EAAD,CACEzM,gBAAiB6B,KAAKwI,MAAMrK,gBAC5BsD,OAAQzB,KAAKwI,MAAMI,kBACnBhF,eAAgB5D,KAAK4D,iBACvBlF,EAAAC,EAAAC,cAACiM,EAAD,CACE1M,gBAAiB6B,KAAKwI,MAAMrK,gBAC5BuE,sBAAuB1C,KAAK0C,yBAEhChE,EAAAC,EAAAC,cAACkM,EAAD,CAAa9F,KAAMhF,KAAKuK,aAAclF,WAAYrF,KAAKwI,MAAMnD,cAE/D3G,EAAAC,EAAAC,cAACmM,EAAD,CAAerF,WAAY1F,KAAKwI,MAAM9C,WAAYC,OAAQ3F,KAAKwK,kBAAmBhF,cAAexF,KAAKwI,MAAMhD,wBArI9FwF,IAAMnJ,WCiBboJ,mLAvBX,OACEvM,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,sBACAJ,EAAAC,EAAAC,cAAA,8nEACAF,EAAAC,EAAAC,cAAA,ksBACAF,EAAAC,EAAAC,cAAA,g6BACAF,EAAAC,EAAAC,cAAA,oMACAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,kBACAJ,EAAAC,EAAAC,cAAA,wNACAF,EAAAC,EAAAC,cAAA,wvCACAF,EAAAC,EAAAC,cAAA,k4CACAF,EAAAC,EAAAC,cAAA,wYACAF,EAAAC,EAAAC,cAAA,uVAjBaiD,aC0DVqJ,oNA7Cb1C,MAAQ,CACN2C,UAAU,KAGZC,iBAAmB,WACdrL,EAAKyI,MAAM2C,SACZpL,EAAKwJ,SAAS,CAAE4B,UAAU,IAE1BpL,EAAKwJ,SAAS,CAAE4B,UAAU,6EAK5B,OACEzM,EAAAC,EAAAC,cAACyM,EAAA,EAAD,KACE3M,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAWT,KAAMhF,KAAKwI,MAAM2C,SAAUxF,OAAQ3F,KAAKoL,iBAAkB1H,MAAO,CAAEC,MAAO,OAASkC,UAAW,OACvGnH,EAAAC,EAAAC,cAAC6G,EAAA,EAAUK,OAAX,KACEpH,EAAAC,EAAAC,cAAC6G,EAAA,EAAUM,MAAX,CAAiBjH,UAAU,OAA3B,SAEFJ,EAAAC,EAAAC,cAAC6G,EAAA,EAAUO,KAAX,KACEtH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uCACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAkBJ,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAMC,GAAG,KAAT,kBAChC5M,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAkBJ,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAMC,GAAG,iBAAT,oBAItC5M,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iEACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4CACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,aADF,OAGAJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,6BAA6Be,QAASG,KAAKoL,kBAC3D1M,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBAInBJ,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,KACE7M,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAAS/M,EAAAC,EAAAC,cAAC8M,EAAD,QACzBhN,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,QAAS/M,EAAAC,EAAAC,cAAC+M,EAAD,iBAvC7BX,IAAMnJ,YCFT+J,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAzM,EAAA,GAAA1B,KAAAmO,EAAAC,KAAA,UAAqBpO,KAAK,SAAAG,GAAiD,IAA9CkO,EAA8ClO,EAA9CkO,OAAQC,EAAsCnO,EAAtCmO,OAAQC,EAA8BpO,EAA9BoO,OAAQC,EAAsBrO,EAAtBqO,OAAQC,EAActO,EAAdsO,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,kBCCDS,IAASC,WAAWpC,SAASC,eAAe,SACpDoC,OACH9N,EAAAC,EAAAC,cAACF,EAAAC,EAAM8N,WAAP,KACE/N,EAAAC,EAAAC,cAAC8N,EAAD,QAOJd","file":"static/js/main.586803b0.chunk.js","sourcesContent":["import React from 'react';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport { InputGroup, Form } from \"react-bootstrap\";\n\nconst PlacesAutocomplete = (props) => {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define search scope here */\n      componentRestrictions: { country: 'sg', },\n    },\n    debounce: 300,\n  });\n\n  const ref = useOnclickOutside(() => {\n    // When user clicks outside of the component, we can dismiss\n    // the searched suggestions by calling this method\n    clearSuggestions();\n  });\n\n  const handleInput = (e) => {\n    // Update the keyword of the input element\n    setValue(e.target.value);\n  };\n\n  const handleSelect = (suggestion) =>\n    () => {\n      // When user selects a place, we can replace the keyword without request data from API\n      // by setting the second parameter to \"false\"\n      const fullAddress = suggestion.description;\n      const placeName = suggestion.structured_formatting.main_text;\n      const address = suggestion.structured_formatting.secondary_text;\n      setValue(placeName + \", \" + address, false);\n      clearSuggestions();\n\n      // Get latitude and longitude via utility functions\n      getGeocode({ address: fullAddress })\n        .then((results) => getLatLng(results[0]))\n        .then(({ lat, lng }) => {\n          //console.log(\"Coordinates: \", { lat, lng });\n          props.onSelectDestination({ destinationAddr: address, destinationLat: lat, destinationLng: lng });\n        })\n        .catch((error) => {\n          console.log(\"Error: \", error);\n        });\n    };\n\n  const renderSuggestions = () =>\n    data.map((suggestion) => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n\n      return (\n        <li className=\"dropdown-item\" key={place_id} onClick={handleSelect(suggestion)}>\n          <strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  return (\n    <div ref={ref}>\n      <InputGroup className=\"mb-1\">\n        <Form.Control\n          type=\"search\"\n          className=\"fs-5\"\n          placeholder=\"Destination\"\n          aria-label=\"Destination\"\n          aria-describedby=\"basic-addon2\"\n          onChange={handleInput}\n          disabled={!ready}\n          value={value} />\n      </InputGroup>\n      {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n      {status === \"OK\" && <div className=\"dropdown\"><ul className=\"dropdown-menu d-block fs-5\">{renderSuggestions()}</ul></div>}\n    </div>\n  );\n};\n\nexport default PlacesAutocomplete;\n\n","import React, { Component } from 'react';\nimport { DistanceMatrixService } from '@react-google-maps/api';\n\nclass DistanceMatrixWrapper extends Component {\n  render() {\n    if (this.props.inputs.calculateDistance === false) {\n      //console.log(\"DO NOT DO!\");\n      return;\n    } else {\n      //console.log(\"LET'S GO!\");\n    }\n    const travelMode = 'DRIVING';\n    const position = this.props.inputs.position;\n    const destAdr = this.props.inputs.destinationAddr;\n    const offsetOverride = this.props.inputs.offsetOverride;\n    const calculateDistance = this.props.inputs.calculateDistance;\n    const origLat = (this.props.inputs.position !== null) ? this.props.inputs.position.coords.latitude : 1.2857166;\n    const origLng = (this.props.inputs.position !== null) ? this.props.inputs.position.coords.longitude : 103.8235629;\n    const destLat = this.props.inputs.destinationLat;\n    const destLng = this.props.inputs.destinationLng;\n    return (\n      <DistanceMatrixService\n        options={{\n          destinations: [{ lat: origLat, lng: origLng }],\n          origins: [{ lat: destLat, lng: destLng }],\n          travelMode: travelMode,\n        }}\n        callback={(res) => {\n          if (position !== null) {\n            let distance = res.rows[0].elements[0];\n            this.props.onChangeDMDistance(distance);\n            if (destAdr !== \"\" && offsetOverride === false) {\n              let duration = distance.duration.value / 60;\n              let offset = Math.ceil(duration / 5) * 5;\n              this.props.onChangeDMOffset(offset);\n            }\n          } else {\n            if (calculateDistance) {\n              const offset = 0;\n              this.props.onChangeDMOffset(offset);\n            }\n          }\n        }}\n      />\n    );\n  }\n}\n\nexport default DistanceMatrixWrapper;","import React, { Component } from 'react';\nimport { Button } from \"react-bootstrap\";\n\nclass ParkingPeriod extends Component {\n\n  constructor() {\n    super();\n    this.buttons = [\n      'btn-warning',\n      'btn-secondary',\n      'btn-secondary',\n      'btn-secondary',\n      'btn-secondary'\n    ]\n  }\n\n  onClickPeriod = (btnIndex, parkingPeriod) => {\n    for (let i = 0; i < this.buttons.length; ++i) {\n      if (i === btnIndex) {\n        this.buttons[i] = 'btn-warning';\n      } else {\n        this.buttons[i] = 'btn-secondary';\n      }\n    }\n    this.props.onChangeParkingPeriod(parkingPeriod);\n  }\n\n  render() {\n    if(this.props.destinationAddr === \"\") return;\n    return (\n      <div className=\"input-group pt-1 pb-2\">\n        <Button className={\"btn fs-5 btn-secondary\"}>for</Button>\n        <Button className={\"btn fs-5 \" + this.buttons[0]} onClick={() => this.onClickPeriod(0, 0.5)}>30min</Button>\n        <Button className={\"btn fs-5 \" + this.buttons[1]} onClick={() => this.onClickPeriod(1, 1)}>1hr</Button>\n        <Button className={\"btn fs-5 \" + this.buttons[2]} onClick={() => this.onClickPeriod(2, 2)}>2hr</Button>\n        <Button className={\"btn fs-5 \" + this.buttons[3]} onClick={() => this.onClickPeriod(3, 3)}>3hr</Button>\n        <Button className={\"btn fs-5 \" + this.buttons[4]} onClick={() => this.onClickPeriod(4, 6)}>6hr</Button>\n      </div>\n    );\n  }\n}\n\nexport default ParkingPeriod;","import React, { Component } from 'react';\n\nclass ParkingTimeOffset extends Component {\n\n  constructor() {\n    super();\n    this.offsets = [\n      { value: 0, description: 'parking start now, at ' },\n      { value: 5, description: 'parking start in +5min, at ' },\n      { value: 10, description: 'parking start in +10min, at ' },\n      { value: 15, description: 'parking start in +15min, at ' },\n      { value: 20, description: 'parking start in +20min, at ' },\n      { value: 25, description: 'parking start in +25min, at ' },\n      { value: 30, description: 'parking start in +30min, at ' },\n      { value: 35, description: 'parking start in +35min, at ' },\n      { value: 40, description: 'parking start in +40min, at ' },\n      { value: 45, description: 'parking start in +45min, at ' }\n    ];\n  }\n\n  refreshOffsets = () => {\n    const dateTimeNow = Date.now();\n    this.offsets.forEach(offset => {\n      const offsetDateTime = new Date(dateTimeNow + offset.value * 60 * 1000);\n      const offsetHours = offsetDateTime.getHours().toString().padStart(2, '0');\n      const offsetMinutes = offsetDateTime.getMinutes().toString().padStart(2, '0');\n      const timeDescription = offsetHours + \":\" + offsetMinutes;\n      offset.timeDescription = timeDescription;\n    });\n  }\n\n  render() {\n    if(this.props.destinationAddr === \"\") return;\n    this.refreshOffsets();\n    return (\n      <div className=\"col-xs-2\">\n        <select className=\"form-select fs-5 bg-warning\" style={{ width: \"347px\" }} value={this.props.offset} onChange={this.props.onChangeOffset}>\n          {this.offsets.map(offset => (\n            <option key={offset.value} value={offset.value}>{offset.description}{offset.timeDescription}</option>))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default ParkingTimeOffset;","import React, { Component } from 'react';\n\nclass ParkingListItem extends Component {\n\n  onClickDestination = () => {\n    const googleMapUrl = this.props.carparkData.googleMapUrl;\n    window.open(googleMapUrl, '_blank');\n  }\n\n  renderParkingFee = (estimate) => {\n    if (estimate.parkingForbidden === true) {\n      return <div className=\"badge bg-danger\">CLOSED</div>;\n    } else {\n      if (estimate.parkingFee === 0) {\n        return <div className=\"badge bg-primary\">FREE</div>;\n      } else {\n        return <div className=\"badge bg-primary\">S${estimate.parkingFee.toFixed(2)}</div>;\n      }\n    }\n  }\n\n  renderAvailability = (availability) => {\n    if (availability === undefined) return;\n    const lots_available = availability[0].lots_available;\n    if (lots_available !== \"0\") {\n      return <div className=\"badge bg-primary\">{lots_available} lots</div>;\n    } else {\n      return <div className=\"badge bg-danger\">{lots_available} lots</div>;\n    }\n  }\n\n  render() {\n    if (this.props.carparkData === null) return;\n    const availability = this.props.carparkData.carpark.carparkAvailability;\n    const estimate = {\n      parkingFee: this.props.carparkData.fee_structure.parkingFee,\n      parkingForbidden: this.props.carparkData.fee_structure.parkingForbidden\n    };\n    return (\n      <li\n        variant=\"light\"\n        className=\"list-group-item list-group-item-action align-items-start d-flex px-0\">\n\n        <div className=\"col-2 col-sm-1 text-center\" onClick={() => this.props.show(this.props.detailIndex)}>\n          <i className=\"bi bi-geo-alt-fill fs-3\"></i>\n        </div>\n        <div className=\"col-7 col-sm-8 fs-6\" onClick={this.onClickDestination}>\n          <div className=\"fw-bold\">{this.props.carparkData.carpark.name}</div>\n          <div>{this.props.carparkData.walkingMinutes} min walk</div>\n          <div>{this.props.carparkData.carpark.address}</div>\n        </div>\n        <div className=\"col-3 text-end p-0 pe-2\">\n          {this.renderParkingFee(estimate)}\n          {this.renderAvailability(availability)}\n        </div>\n\n      </li>\n    );\n  }\n}\n\nexport default ParkingListItem;\n\n","import React, { Component } from 'react';\nimport ParkingListItem from './ParkingListItem';\n\nclass ParkingList extends Component {\n  render() {\n    if (this.props.shortlists.length < 1) return;\n    return (\n      <div className=\"container-lg px-0 pb-2\">\n        <ul className=\"list-group list-group-flush fs-5\">\n          <ParkingListItem show={this.props.show} detailIndex={0} carparkData={(this.props.shortlists.length > 0) ? this.props.shortlists[0] : null} />\n          <ParkingListItem show={this.props.show} detailIndex={1} carparkData={(this.props.shortlists.length > 1) ? this.props.shortlists[1] : null} />\n          <ParkingListItem show={this.props.show} detailIndex={2} carparkData={(this.props.shortlists.length > 2) ? this.props.shortlists[2] : null} />\n          <ParkingListItem show={this.props.show} detailIndex={3} carparkData={(this.props.shortlists.length > 3) ? this.props.shortlists[3] : null} />\n          <ParkingListItem show={this.props.show} detailIndex={4} carparkData={(this.props.shortlists.length > 4) ? this.props.shortlists[4] : null} />\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ParkingList;","import React, { Component } from 'react';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\nclass ParkingDetail extends Component {\n  render() {\n    if (this.props.carparkDetail === null) return;\n    return (\n      <Offcanvas show={this.props.showDetail} onHide={this.props.onHide} style={{ height: \"80%\" }} placement={'bottom'}>\n        <Offcanvas.Header>\n          <Offcanvas.Title><i className=\"bi bi-geo-alt-fill\" /> {this.props.carparkDetail.name}</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          <h5 className=\"pt-3\">Weekday Peak</h5>\n          <div className=\"fs-6\">{this.props.carparkDetail.rate_workday_peak}</div>\n          <h5 className=\"pt-3\">Weekday Off-Peak</h5>\n          <div className=\"fs-6\">{this.props.carparkDetail.rate_workday_offpeak}</div>\n          <h5 className=\"pt-3\">Saturday</h5>\n          <div className=\"fs-6\">{this.props.carparkDetail.rate_sat}</div>\n          <h5 className=\"pt-3\">Sunday and Public Holiday</h5>\n          <div className=\"fs-6\">{this.props.carparkDetail.rate_sun_ph}</div>\n        </Offcanvas.Body>\n      </Offcanvas>\n    );\n  }\n}\n\nexport default ParkingDetail;","export class CarparkAvailability {\n  constructor(callback) {\n    this.data = null;\n    this.refreshDateTime = null;\n    this.dataError = null;\n    this.dataLoad = false;\n    this.callback = callback;\n\n    this.fetchAvailabilityData();\n  }\n\n  fetchAvailabilityData = () => {\n    const url = 'https://www.koleksikatik.com/data/d.json';\n    const method = 'GET';\n    const headers = { 'content-type': 'application/json' };\n\n    fetch(url, { method: method, headers })\n      .then(response => { return response.json() })\n      .then((data) => {\n        this.data = data.items[0].carpark_data;\n        this.refreshDateTime = data.items[0].timestamp;\n        this.dataLoad = true;\n        this.callback();\n      }).catch((error) => {\n        this.dataError = error;\n        this.dataLoad = true;\n        this.callback();\n      });\n  }\n\n  populateAvailability = (shortlists) => {\n    if (this.data === undefined || this.data === null) return;\n    shortlists.forEach(shortlist => {\n      const carparkNo = shortlist.carpark.car_park_no;\n      this.data.forEach(availability => {\n        const availabilityCarparkNo = availability.carpark_number;\n        if (carparkNo === availabilityCarparkNo) {\n          shortlist.carpark.carparkAvailability = availability.carpark_info;\n        }\n      })\n    });\n  }\n}\n","import { initializeApp } from \"firebase/app\";\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\n\nconst firebaseConfig = {\n  apiKey: \"\",\n  authDomain: \"nearest-parking-58a90.firebaseapp.com\",\n  projectId: \"nearest-parking-58a90\",\n  storageBucket: \"nearest-parking-58a90.appspot.com\",\n  messagingSenderId: \"543236969803\",\n  appId: \"1:543236969803:web:73756cbeadc9e65c4a44ce\",\n  measurementId: \"G-P6E5LH4QY0\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst functions = getFunctions(app);\nconst getNearestCarparks = httpsCallable(functions, 'getNearestCarparks');\n\nexport default getNearestCarparks;\n","import React from \"react\";\nimport PlacesAutocomplete from \"./PlacesAutocomplete\";\nimport DistanceMatrixWrapper from \"./DistanceMatrixWrapper\";\nimport ParkingPeriod from \"./ParkingPeriod\";\nimport ParkingTimeOffset from \"./ParkingTimeOffset\";\nimport ParkingList from \"./ParkingList\";\nimport ParkingDetail from \"./ParkingDetail\";\nimport { CarparkAvailability } from \"../lib/CarparkAvailability\";\nimport getNearestCarparks from \"../lib/NearestFirebase\";\n\n\nclass AppMain extends React.Component {\n  state = {\n    position: null,\n    distance: null,\n    showDetail: false,\n    offsetOverride: false,\n    calculateDistance: false,\n    originLat: 0,\n    originLng: 0,\n    destinationAddr: \"\",\n    destinationLat: 0,\n    destinationLng: 0,\n    destinationSearchRadius: 1,\n    timeToDestination: 0,\n    parkingPeriod: 0.5,\n    carparkDetail: null,\n    shortlists: []\n  };\n\n  componentDidMount = () => {\n    this.carparkAvailability = new CarparkAvailability(() => { this.showLoading(false) });\n    navigator.geolocation.getCurrentPosition(\n      this.onPositionSuccess,\n      this.onPositionError,\n      {\n        enableHighAccuracy: false,\n        timeout: 5000,\n        maximumAge: 5000\n      }\n    );\n  }\n\n  onPositionSuccess = (position) => {\n    const originLat = position.coords.latitude;\n    const originLng = position.coords.longitude;\n    this.setState({ position, originLat, originLng });\n  }\n\n  onPositionError = (error) => {\n    // TODO: improvement on how to warn customers\n  }\n\n  refreshCarparkShortlist = () => {\n    if (this.state.destinationAddr === \"\") return;\n    this.showLoading(true);\n    const oLat = (this.state.originLat === 0) ? this.state.destinationLat : this.state.originLat;\n    const oLng = (this.state.originLng === 0) ? this.state.destinationLng : this.state.originLng;\n    getNearestCarparks({\n      oLat: oLat,\n      oLng: oLng,\n      dLat: this.state.destinationLat,\n      dLng: this.state.destinationLng,\n      timeToDest: this.state.timeToDestination,\n      parkPeriod: this.state.parkingPeriod,\n      destRadius: this.state.destinationSearchRadius,\n    }).then((result) => {\n      const shortlists = result.data;\n      console.log(result);\n      this.carparkAvailability.populateAvailability(shortlists);\n      this.setState({ shortlists: shortlists }, () => {\n        //console.log(this.state);\n        this.showLoading(false);\n      });\n    });\n  }\n\n  showLoading = (isLoading) => {\n    const display = (isLoading) ? \"flex\" : \"none\";\n    document.getElementById(\"overlay\").style.display = display;\n  }\n\n  onSelectDestination = (destinationData) => {\n    this.setState({ offsetOverride: false, calculateDistance: true });\n    this.setState(destinationData, this.refreshCarparkShortlist);\n  }\n\n  onChangeParkingPeriod = (parkingPeriod) => {\n    this.setState({ parkingPeriod: parkingPeriod }, this.refreshCarparkShortlist);\n  }\n\n  onChangeOffset = (event) => {\n    this.setState({ offsetOverride: true, timeToDestination: event.target.value }, this.refreshCarparkShortlist);\n  }\n\n  onChangeDMDistance = (distance) => {\n    this.setState({ distance: distance });\n  }\n\n  onChangeDMOffset = (offset) => {\n    if (this.state.offsetOverride === true) return; // NOTE: when will offset be override\n    this.setState({ timeToDestination: offset, calculateDistance: false });\n  }\n\n  onShowDetail = (detailIndex) => {\n    const carparkDetail = this.state.shortlists[detailIndex].carpark;\n    this.setState({ carparkDetail: carparkDetail, showDetail: true });\n  }\n\n  onCloseShowDetail = () => {\n    this.setState({ showDetail: false });\n  }\n\n  render() {\n    return (\n      <main>\n        <div id=\"overlay\" style={{ display: \"flex\", }}>\n          <div className=\"w-100 d-flex justify-content-center align-items-center\">\n            <div className=\"spinner\"></div>\n          </div>\n        </div>\n        <div className=\"container-fluid bg-secondary p-0 m-0 pb-2\">\n          <div className=\"container\">\n            <PlacesAutocomplete\n              inputs={this.state}\n              onSelectDestination={this.onSelectDestination} />\n            <DistanceMatrixWrapper\n              inputs={this.state}\n              onChangeDMDistance={this.onChangeDMDistance}\n              onChangeDMOffset={this.onChangeDMOffset} />\n          </div>\n        </div>\n        <div className=\"container-fluid p-0 m-0\">\n          <div className=\"container-lg py-2\">\n            <ParkingTimeOffset\n              destinationAddr={this.state.destinationAddr}\n              offset={this.state.timeToDestination}\n              onChangeOffset={this.onChangeOffset} />\n            <ParkingPeriod\n              destinationAddr={this.state.destinationAddr}\n              onChangeParkingPeriod={this.onChangeParkingPeriod} />\n          </div>\n          <ParkingList show={this.onShowDetail} shortlists={this.state.shortlists} />\n        </div>\n        <ParkingDetail showDetail={this.state.showDetail} onHide={this.onCloseShowDetail} carparkDetail={this.state.carparkDetail} />\n      </main>\n    );\n  }\n}\n\nexport default AppMain;\n\n","import React, { Component } from 'react';\n\nclass TermsOfUse extends Component {\n\n  render() {\n    return (\n      <main>\n        <div className=\"container-fluid p-0 m-0\">\n          <div className=\"container-lg pt-4\">\n            <h3 className=\"py-2\">TERMS & CONDITIONS</h3>\n            <p>Parkingly (“The Service”, “The Application” or “Parkingly.co”) is provided to the user (“Users”, “You” or “Your”) “AS IS” and “AS AVAILABLE” and with all faults and defects without warranty of any kind. Parkingly team (“We”, “Us” or “Our”) disclaims all warranties, whether express, implied, statutory or otherwise, with respect to the Service, including all implied warranties of merchantability, fitness for a particular purpose, title and non-infringement, and warranties that may arise out of course of dealing, course of performance, usage or trade practice. Without limitation to the foregoing, we provide no warranty or undertaking, and makes no representation of any kind that the Service will meet Your requirements, achieve any intended results, be compatible or work with any other software, applications, systems or services, operate without interruption, meet any performance or reliability standards or be error free or that any errors or defects can or will be corrected. Without limiting the foregoing, we make neither representation nor warranty of any kind, express or implied: (i) as to the operation or availability of the Service, or the information, content, and materials or products included thereon; (ii) that the Service will be uninterrupted or error-free; (iii) as to the accuracy, reliability, or currency of any information or content provided through the Service; or (iv) that the Service, its servers, the content, or e-mails sent from or on behalf of us are free of viruses, scripts, trojan horses, worms, malware, timebombs or other harmful components. We will not be liable or responsible for any damages or injuries caused by use of the Service. We may from time to time revise the Service, its information and its resources contained within the Service and reserves the right to make such changes without any obligation to notify past, current or prospective user. In no event shall we be liable for any indirect, special, incidental or consequential damages arising out of any use of the Service contained herein.</p>\n            <p>Our Service may contain links to third-party web sites or services that are not owned, controlled or related to us. We have no control over, and assume no responsibility for, the content, privacy policies, or practices of any third party web sites or services. You further acknowledge and agree that we shall not be responsible or liable, directly or indirectly, for any damage or loss caused or alleged to be caused by or in connection with the use of or reliance on any such content, goods or services available on or through any such web sites or services. We strongly advise You to read the terms and conditions and privacy policies of any third-party web sites or services that You visit.</p>\n            <p>The materials contained in the Service are our exclusive property and, except for personal use, may not be copied, distributed, or reproduced or transmitted in any form or by any mean, electronic, mechanical, photocopying, recording or otherwise, without the prior written permission from us. The content, arrangement and the layout of the Service, including, but not limited to, the trademarks, service marks, graphic designs, text, and content, are proprietary and are protected from copying, imitation, communication, or simulation under domestic and international laws and are not to be reproduced, communicated, displayed, distributed, or transmitted without the express written permission from us. By accessing or using the Service, the User does not acquire or obtain by implication or otherwise, any license or right to use or make additional copies of any materials or information displayed on the Service.</p>\n            <p>By accessing or using the Service You agree to be bound by these Terms and Conditions. If You disagree with any part of these Terms and Conditions then You may not access the Service.</p>\n            <h3 className=\"py-2\">PRIVACY POLICY</h3>\n            <p>This Privacy Policy describes Our policies and procedures on the collection, use and disclosure of Your information when You use the Service. We use Your Personal data to provide and improve the Service.</p>\n            <p>While using Our Service, We may ask You to provide Us with certain personally identifiable information that can be used to contact or identify You. Personally identifiable information may include, but is not limited to email address, origin location, destination location and usage data. Usage Data is collected automatically when using the Service. Usage Data may include information such as Your Device's Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that You visit, the time and date of Your visit, the time spent on those pages, unique device identifiers and other diagnostic data. When You access the Service by or through a mobile device, We may collect certain information automatically, including, but not limited to, the type of mobile device You use, Your mobile device unique ID, the IP address of Your mobile device, Your mobile operating system, the type of mobile Internet browser You use, unique device identifiers and other diagnostic data. We use Cookies and similar tracking technologies to track the activity on Our Service and store certain information. Tracking technologies used are beacons, tags, and scripts to collect and track information and to improve and analyse Our Service.</p>\n            <p>We may use Personal Data for the following purposes: to provide and maintain our Service, including to monitor the usage of our Service; to manage Your registration as a user of the Service; for the performance of a contract: the development, compliance and undertaking of the purchase contract for the products, items or services You have purchased or of any other contract with Us through the Service; to contact You by email, telephone calls, SMS, or other equivalent forms of electronic communication, such as a mobile application's push notifications regarding updates or informative communications related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for their implementation; to provide You with news, special offers and general information about other goods, services and events which we offer that are similar to those that you have already purchased or enquired about unless You have opted not to receive such information; to attend and manage Your requests to Us; to evaluate or conduct a merger, divestiture, restructuring, reorganization, dissolution, or other sale or transfer of some or all of Our assets, whether as a going concern or as part of bankruptcy, liquidation, or similar proceeding, in which Personal Data held by Us about our Service users is among the assets transferred; or, for other purposes.</p>\n            <p>We may use third-party Service Providers to provide better improvement of our Service. We may share Your personal information with the Service Providers. The Service Providers We use may have access to Your Personal Data. These third-party vendors collect, store, use, process and transfer information about Your activity on Our Service in accordance with their Privacy Policies.</p>\n            <p>We may update Our Privacy Policy from time to time. You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page. By using the Service, You agree to the collection and use of information in accordance with this Privacy Policy.</p>\n          </div>\n        </div>\n      </main>\n    );\n  }\n\n}\n\nexport default TermsOfUse;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\nimport AppMain from \"./components/AppMain\";\nimport TermsOfUse from \"./components/TermsOfUse\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    showMenu: false\n  };\n\n  onToggleShowMenu = () => {\n    if(this.state.showMenu) {\n      this.setState({ showMenu: false });\n    } else {\n      this.setState({ showMenu: true });\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <Offcanvas show={this.state.showMenu} onHide={this.onToggleShowMenu} style={{ width: \"80%\" }} placement={'end'}>\n          <Offcanvas.Header>\n            <Offcanvas.Title className=\"p-3\">Menu</Offcanvas.Title>\n          </Offcanvas.Header>\n          <Offcanvas.Body>\n            <ul className=\"list-group list-group-flush p-0 m-0\">\n              <li className=\"list-group-item\"><Link to=\"/\">Parkingly App</Link></li>\n              <li className=\"list-group-item\"><Link to=\"/terms-of-use\">Terms of Use</Link></li>\n            </ul>\n          </Offcanvas.Body>\n        </Offcanvas>\n        <div className=\"navbar navbar-dark bg-secondary container-fluid p-0 pt-4 pb-2\">\n          <div className=\"container d-flex justify-content-between\">\n            <h1 className=\"text-light\">\n              <span className=\"fw-bold\">Parkingly</span>.co\n            </h1>\n            <button className=\"btn btn-outline-light mb-3\" onClick={this.onToggleShowMenu}>\n              <i className=\"bi bi-list fs-5\"></i>\n            </button>\n          </div>\n        </div>\n        <Routes>\n          <Route path='/' element={<AppMain />} />\n          <Route path='/terms-of-use' element={<TermsOfUse />} />\n        </Routes>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";  \n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}